@model ResumeBank.Web.Models.CandidateModel
@{
    ViewBag.Title = "AddCandidate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{ var newOrUpdate = "New"; }

@if (Model.Id != null && Model.Id != 0)
{
    newOrUpdate = "Update";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Candidate
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">Candidate</a></li>
        <li class="active">@newOrUpdate Candidate</li>
    </ol>
</section>


<!-- Main content -->
@using (Html.BeginForm("AddCandidate", "Candidate", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.OriginalResumeId)
    @Html.HiddenFor(model => model.ModifiedResumeId)
    <section class="content">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">@newOrUpdate Candidate</h3>
            </div>
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(c => c.Name, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.Email, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.Phone, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.Address, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.DateOfBirth, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.DateOfBirth, "{0:MM/dd/yyyy}", new { @class = "form-control datemask", @placeholder = "mm/dd/yyyy" })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.GenderId, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(c => c.GenderId, new SelectList(Model.Genders, "Id", "Name"), "---Select---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.JobLevelId, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(c => c.JobLevelId, new SelectList(Model.JobLevels, "Id", "Name"), "---Select---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.JobLevelId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.PrimaryCategoryId, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(c => c.PrimaryCategoryId, new SelectList(Model.PrimaryCategories, "Id", "Name"), "---Select---", new { @class = "form-control", @id="primaryCategoryId" })
                            @Html.ValidationMessageFor(model => model.PrimaryCategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.SubCategorySelectedIds, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.ListBoxFor(c => c.SubCategorySelectedIds, new MultiSelectList(Model.SubCategories, "Id", "Name", @Model.SubCategorySelectedIds), new { @class = "form-control select2", @id = "subCategoryId", @disabled = true })
                            @Html.ValidationMessageFor(model => model.SubCategorySelectedIds, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.EducationLevelId, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(c => c.EducationLevelId, new SelectList(Model.EducationLevels, "Id", "Name"), "---Select---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EducationLevelId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.SubjectId, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(c => c.SubjectId, new SelectList(Model.Subjects, "Id", "Name"), "---Select---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.InstituteId, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(c => c.InstituteId, new SelectList(Model.Institutes, "Id", "Name"), "---Select---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.InstituteId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.Training, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextAreaFor(c => c.Training, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Training, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.TotalExperience, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.TotalExperience, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TotalExperience, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.CurrentSalary, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.CurrentSalary, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CurrentSalary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.ExpectedSalary, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.ExpectedSalary, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ExpectedSalary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.Keywords, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(c => c.Keywords, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (Model.Id != null && Model.Id != 0)
                    {
                        
                        <div class="form-group">
                            @Html.Label("Original Resume File", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                @if (Model.OriginalResume != null)
                                {
                                    <a href="@Url.Content(Model.OriginalResume.Url)" target="_blank">
                                        <img src="@(Model.OriginalResume.Url.EndsWith(".pdf")?"/Content/img/pdf-icon.png":"/Content/img/doc-icon.png")" width="50px" height="50px" />
                                    </a>
                                }
                                else
                                {
                                    <label class="control-label">No File</label>
                                }
                            </div>
                        </div>
                        
                        <div class="form-group">
                            @Html.Label("Modified Resume File", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-6">
                                @if (Model.ModifiedResume != null)
                                {
                                    <a href="@Url.Content(Model.ModifiedResume.Url)" target="_blank">
                                        <img src="@(Model.ModifiedResume.Url.EndsWith(".pdf") ? "/Content/img/pdf-icon.png" : "/Content/img/doc-icon.png")" width="50px" height="50px" />
                                    </a>
                                }
                                else
                                {
                                    <label class="control-label">No File</label>
                                }
                            </div>
                        </div>
                        
                    }
                    <div class="form-group">
                        <label for="originalResumeFile" class="col-sm-2 control-label">Original Resume</label>
                        <div class="col-sm-6">
                            <input type="file" id="originalResumeFile" name="OriginalResumeFile">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="modifiedResumeFile" class="col-sm-2 control-label">Modified Resume</label>
                        <div class="col-sm-6">
                            <input type="file" id="modifiedResumeFile" name="ModifiedResumeFile">
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <button type="button" class="btn btn-default" onclick="window.location.reload(true)">Cancel</button>
                    <button type="submit" class="btn btn-info pull-right">Save</button>
                </div>
                <!-- /.box-footer -->
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Project/candidate.js"></script>
}